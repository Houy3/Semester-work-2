

#Введение
Протокол работает на системе: запрос-ответ
В ответе может быть ошибка с текстом ошибки или сообщение о успехе с каким-то объектов. Возвращаемый объект зависит от типа запроса.

Первый этап: вход.
Все довольно очевидно. Либо регистрируешься (авто входа нет), либо входишь по соответствующим формам. В карте соответствия типу класса найдешь.

Так же можно выйти, получить свои данные по новой (если они каким-то чужом устарели), обновить ник или тп.


Второй этап: комната
Надо создать комнату по форме. Возвращается комната с кодом подключения.
Если комната открытая, то по типу GET_OPEN_ROOMS она вернется (то есть любой может к ней подключиться). (то есть тебе нудно написать панель, где можно смотреть открытые комнаты)
Если закрытая, то клиенту надо вручную ввести код.

Так же можно отключиться от комнаты, не выходя из аккаунта или обновить данные комнаты (чтобы видеть новых подключившихся).
Цвет выбирает сервер наугад. Лень писать тип для этого.

Так же нужно нажать кнопку "ready", чтобы дать возможность другим начать игру.

Параметры игры задаются при создании комнаты. После создания комнаты их не изменить

Третий этап: игра
Все подключенным к комнате игрокам приходит сообщение GAME_STARTED с объектом Game.
Игра начинается не сразу, а во время прописанное в Game

А потом просто игрок отсылает GameAction серверу, а сервер раскидывает всем остальным.

Есть возможность обновить данные игры, чтобы убрать рассинхронизацию с игрой на сервере

В конце игры игрокам приходит сообщение GAME_ENDED, но игроки остаются подключенными к комнате.
Дай им возможность выбирать (играть снова с ними или уйти). Если хотят уйти, то отключайся от комнаты за них

